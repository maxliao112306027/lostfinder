{"version":3,"sources":["authController.js"],"names":["signup","req","res","body","username","password","email","phone","role","violation_count","sql","db","query","err","result","code","status","json","message","login","results","length","user"],"mappings":";;;;;;;AAAA;;;;AAAmC;AAE5B,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACWD,GAAG,CAACE,IADf;AAAA,MAC1BC,QAD0B,aAC1BA,QAD0B;AAAA,MAChBC,QADgB,aAChBA,QADgB;AAAA,MACNC,KADM,aACNA,KADM;AAAA,MACCC,KADD,aACCA,KADD;AAGlC,MAAMC,IAAI,GAAG,MAAb,CAHkC,CAGb;;AACrB,MAAMC,eAAe,GAAG,CAAxB;AAEA,MAAMC,GAAG,oHAAT;;AAIAC,iBAAGC,KAAH,CAASF,GAAT,EAAc,CAACN,QAAD,EAAWC,QAAX,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyCC,eAAzC,CAAd,EAAyE,UAACI,GAAD,EAAMC,MAAN,EAAiB;AACxF,QAAID,GAAJ,EAAS;AACP,UAAIA,GAAG,CAACE,IAAJ,KAAa,cAAjB,EAAiC;AAC/B,eAAOb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB,CAAP;AACD;;AACD,aAAOhB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;;AACDhB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD,GARD;AASD,CAnBM;;;;AAqBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAClB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACFD,GAAG,CAACE,IADF;AAAA,MACzBC,QADyB,cACzBA,QADyB;AAAA,MACfC,QADe,cACfA,QADe;AAGjC,MAAMK,GAAG,2DAAT;;AAEAC,iBAAGC,KAAH,CAASF,GAAT,EAAc,CAACN,QAAD,EAAWC,QAAX,CAAd,EAAoC,UAACQ,GAAD,EAAMO,OAAN,EAAkB;AACpD,QAAIP,GAAJ,EAAS,OAAOX,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACT,QAAIE,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B,OAAOnB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AAE1BhB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBI,MAAAA,IAAI,EAAEF,OAAO,CAAC,CAAD;AAAhC,KAArB;AACD,GALD;AAMD,CAXM","sourcesContent":["import db from '../config/db.js';  // 注意要加 .js 副檔名，ESM 規定\n\nexport const signup = (req, res) => {\n  const { username, password, email, phone } = req.body;\n\n  const role = 'user'; // 固定只能註冊 user\n  const violation_count = 0;\n\n  const sql = `\n    INSERT INTO user (username, password, email, phone, role, violation_count)\n    VALUES (?, ?, ?, ?, ?, ?)`;\n\n  db.query(sql, [username, password, email, phone, role, violation_count], (err, result) => {\n    if (err) {\n      if (err.code === 'ER_DUP_ENTRY') {\n        return res.status(400).json({ message: '帳號或信箱已存在' });\n      }\n      return res.status(500).json({ message: '伺服器錯誤' });\n    }\n    res.status(201).json({ message: '註冊成功' });\n  });\n};\n\nexport const login = (req, res) => {\n  const { username, password } = req.body;\n\n  const sql = `SELECT * FROM user WHERE username = ? AND password = ?`;\n\n  db.query(sql, [username, password], (err, results) => {\n    if (err) return res.status(500).json({ message: '伺服器錯誤' });\n    if (results.length === 0) return res.status(401).json({ message: '帳號或密碼錯誤' });\n\n    res.status(200).json({ message: '登入成功', user: results[0] });\n  });\n};\n"],"file":"authController.dev.js"}