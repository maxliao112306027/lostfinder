{"version":3,"sources":["authController.js"],"names":["_db","_interopRequireDefault","require","signup","req","res","_req$body","body","username","password","email","phone","db","err","result","code","status","message","json","query","results","length","user"],"mappings":"wGAAA,IAAAA,IAAAC,uBAAAC,QAAA,4FAEO,IAAMC,OAAS,SAACC,EAAKC,GAAQ,IAAAC,EACWF,EAAIG,KAAzCC,EAD0BF,EAC1BE,SAAUC,EADgBH,EAChBG,SAAUC,EADMJ,EACNI,MAAOC,EADDL,EACCK,MAD9BC,IAAAA,QAAMT,MAMF,kHANW,CAAAK,EAATL,EAASO,EAAcC,EAGrB,OACW,GAJU,SAAAE,EAAAC,GAAA,GAAAD,EAC1BL,MAD0B,iBAC1BA,EAD0BO,KAAAV,EAAAW,OAAA,KAChBP,KADgB,CAAAQ,QAAA,aAAAZ,EAAAW,OACCL,KADDO,KAAA,CAAAD,QAAA,UAiBhCZ,EAAIW,OAAO,KAAKE,KAAK,CAAED,QAAS,kCAPlCL,IAAAA,MAAGO,SAAHf,EAAAC,GAAeG,IAAAA,EACJJ,EAAAG,KAALM,EADSL,EACTK,SAAKJ,EADID,EACJC,SAEuBG,IAAAA,QAAAO,MAA5B,yDAAA,CAAAX,EAAAC,GAAA,SAAAI,EAAAO,GACD,OAAAP,EAAAR,EAAAW,OAAA,KAAAE,KAAA,CAAAD,QAAA,UAcoB,IAAnBG,EAAQC,OAAqBhB,EAAIW,OAAO,KAAKE,KAAK,CAAED,QAAS,iBAbjCA,EAAAA,OAAO,KAAEC,KAAA,CAAAD,QAAA,OAAAK,KAAAF,EAAA","file":"authController.min.js","sourcesContent":["import db from '../config/db.js';  // 注意要加 .js 副檔名，ESM 規定\n\nexport const signup = (req, res) => {\n  const { username, password, email, phone } = req.body;\n\n  const role = 'user'; // 固定只能註冊 user\n  const violation_count = 0;\n\n  const sql = `\n    INSERT INTO user (username, password, email, phone, role, violation_count)\n    VALUES (?, ?, ?, ?, ?, ?)`;\n\n  db.query(sql, [username, password, email, phone, role, violation_count], (err, result) => {\n    if (err) {\n      if (err.code === 'ER_DUP_ENTRY') {\n        return res.status(400).json({ message: '帳號或信箱已存在' });\n      }\n      return res.status(500).json({ message: '伺服器錯誤' });\n    }\n    res.status(201).json({ message: '註冊成功' });\n  });\n};\n\nexport const login = (req, res) => {\n  const { username, password } = req.body;\n\n  const sql = `SELECT * FROM user WHERE username = ? AND password = ?`;\n\n  db.query(sql, [username, password], (err, results) => {\n    if (err) return res.status(500).json({ message: '伺服器錯誤' });\n    if (results.length === 0) return res.status(401).json({ message: '帳號或密碼錯誤' });\n\n    res.status(200).json({ message: '登入成功', user: results[0] });\n  });\n};\n"]}