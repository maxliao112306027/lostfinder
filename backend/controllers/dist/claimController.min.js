"use strict";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var t=[],n=!0,s=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){s=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(s)throw a}}return t}}function _arrayWithHoles(e){if(Array.isArray(e))return e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMyClaims=exports.submitClaimRequest=void 0;var submitClaimRequest=function(r,t){var n,s,a,i,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.body,s=n.item_id,a=n.user_id,n.reason,s&&a){e.next=3;break}return e.abrupt("return",t.status(400).json({error:"缺少 item_id 或 user_id"}));case 3:return e.prev=3,e.next=6,regeneratorRuntime.awrap(db.query("INSERT INTO claim_request (item_id, user_id, status, request_date)\n         VALUES (?, ?, 'pending', NOW())",[s,a]));case 6:i=e.sent,u=_slicedToArray(i,1),o=u[0],t.json({message:"認領申請已送出",request_id:o.insertId}),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(3),console.error("❌ 認領申請失敗:",e.t0),t.status(500).json({error:"伺服器錯誤"});case 16:case"end":return e.stop()}},null,null,[[3,12]])};exports.submitClaimRequest=submitClaimRequest;var getMyClaims=function(r,t){var n,s,a,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.query.user_id){e.next=3;break}return e.abrupt("return",t.status(400).json({error:"缺少 user_id"}));case 3:return e.prev=3,e.next=6,regeneratorRuntime.awrap(db.query("SELECT c.*, i.item_name\n         FROM claim_request c\n         JOIN items i ON c.item_id = i.item_id\n         WHERE c.user_id = ?\n         ORDER BY c.request_date DESC",[n]));case 6:s=e.sent,a=_slicedToArray(s,1),i=a[0],t.json(i),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(3),console.error("❌ 查詢認領失敗:",e.t0),t.status(500).json({error:"伺服器錯誤"});case 16:case"end":return e.stop()}},null,null,[[3,12]])};exports.getMyClaims=getMyClaims;
//# sourceMappingURL=claimController.min.js.map
