{"version":3,"sources":["claimController.js"],"names":["submitClaimRequest","req","res","body","item_id","user_id","reason","status","json","error","db","query","result","message","request_id","insertId","console","getMyClaims","rows"],"mappings":";;;;;;;;;;;;;;;AAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACOD,GAAG,CAACE,IADX,EACtBC,OADsB,aACtBA,OADsB,EACbC,OADa,aACbA,OADa,EACJC,MADI,aACJA,MADI;;AAAA,gBAG1B,CAACF,OAAD,IAAY,CAACC,OAHa;AAAA;AAAA;AAAA;;AAAA,2CAIrBH,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJqB;;AAAA;AAAA;AAAA;AAAA,0CAQLC,EAAE,CAACC,KAAH,iHAGrB,CAACP,OAAD,EAAUC,OAAV,CAHqB,CARK;;AAAA;AAAA;AAAA;AAQrBO,UAAAA,MARqB;AAc5BV,UAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEK,YAAAA,OAAO,EAAE,SAAX;AAAsBC,YAAAA,UAAU,EAAEF,MAAM,CAACG;AAAzC,WAAT;AAd4B;AAAA;;AAAA;AAAA;AAAA;AAgB5BC,UAAAA,OAAO,CAACP,KAAR,CAAc,WAAd;AACAP,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAjB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;;;AAoBE,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBG,UAAAA,OADiB,GACLJ,GAAG,CAACU,KADC,CACjBN,OADiB;;AAAA,cAGpBA,OAHoB;AAAA;AAAA;AAAA;;AAAA,4CAIhBH,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJgB;;AAAA;AAAA;AAAA;AAAA,0CAQFC,EAAE,CAACC,KAAH,gLAMnB,CAACN,OAAD,CANmB,CARE;;AAAA;AAAA;AAAA;AAQhBa,UAAAA,IARgB;AAiBvBhB,UAAAA,GAAG,CAACM,IAAJ,CAASU,IAAT;AAjBuB;AAAA;;AAAA;AAAA;AAAA;AAmBvBF,UAAAA,OAAO,CAACP,KAAR,CAAc,WAAd;AACAP,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AApBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["export const submitClaimRequest = async (req, res) => {\n    const { item_id, user_id, reason } = req.body;\n  \n    if (!item_id || !user_id) {\n      return res.status(400).json({ error: '缺少 item_id 或 user_id' });\n    }\n  \n    try {\n      const [result] = await db.query(\n        `INSERT INTO claim_request (item_id, user_id, status, request_date)\n         VALUES (?, ?, 'pending', NOW())`,\n        [item_id, user_id]\n      );\n  \n      res.json({ message: '認領申請已送出', request_id: result.insertId });\n    } catch (err) {\n      console.error('❌ 認領申請失敗:', err);\n      res.status(500).json({ error: '伺服器錯誤' });\n    }\n  };\n  export const getMyClaims = async (req, res) => {\n    const { user_id } = req.query;\n  \n    if (!user_id) {\n      return res.status(400).json({ error: '缺少 user_id' });\n    }\n  \n    try {\n      const [rows] = await db.query(\n        `SELECT c.*, i.item_name\n         FROM claim_request c\n         JOIN items i ON c.item_id = i.item_id\n         WHERE c.user_id = ?\n         ORDER BY c.request_date DESC`,\n        [user_id]\n      );\n  \n      res.json(rows);\n    } catch (err) {\n      console.error('❌ 查詢認領失敗:', err);\n      res.status(500).json({ error: '伺服器錯誤' });\n    }\n  };\n    "],"file":"claimController.dev.js"}